// Setup manifest file
jar {
    manifest {
        attributes(
            "Built-By": System.properties["user.name"],
            "Created-By": System.properties["java.version"] + " (" + System.properties["java.vendor"] + " " + System.properties["java.vm.version"] + ")",
            "Build-Date": project.buildDate,
            "Build-Time": project.buildTime,
            "Name": project.packageName,
            "Specification-Title": project.name,
            "Specification-Version": project.version,
            "Specification-Vendor": project.packageVendor,
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Implementation-Vendor": project.packageVendor
        )
    }
    from "LICENSE"
}

// Add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

// Create additional pom.xml properties 
def pomConfig = {
    name project.name
    description project.description
    url project.websiteUrl
    inceptionYear project.inceptionYear
    licenses {
        project.licenses.each { lic ->
            license {
	            name lic.name
	            url lic.url
	            distribution "repo"
            }
        }
    }
    scm {
        connection project.scmROConnection
        developerConnection project.scmRWConnection
        url project.scmUrl
    }
    issueManagement {
    	system project.issuesSystem
    	url project.issuesUrl
    }
    developers {
        project.developers.each { dev ->
            developer {
                id dev.id
                name dev.name
                roles {
                    role "Developer"
                }
            }
        }
    }
}

// Setup maven publishing task, which is used by bintray and artifactory tasks
publishing {
    publications {
        mavenJava(MavenPublication) {
			groupId project.group
			artifactId project.name
			version project.version
			
            from components.java
            
            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }
            
            pom.withXml {
                asNode().children().last() + pomConfig
            }
        }
    }
}